#include <iostream>
#include <fstream>
#include <cmath>
using namespace std;
const float pi = 3.141592;
int main() {
	char* header1; // char : 1byte
	header1 = new char[12]; // header : 12byte
	int* n;
	n = (int*)header1;
	*n = 500;  //sample 갯수 , 0-3
	cout << "n의 주소" << n << endl;
	float* f;
	f = (float*)(header1 + 4);
	*f = 1000; // 주파수 , 4-7
	short* a;
	a = (short*)(header1 + 8);
	*a = 200; // 진폭 ,  8-9
	short* p;
	p = (short*)(header1 + 10);
	*p = 12; // phase , 10-11

	// data1 생성
	short* data1;
	data1 = new short[*n]; // 1000byte 할당
	float dt = 1. / f[0] / 20.0;
	for (int i = 0; i < *n; i++)
		data1[i] = (short)((*a) * sin(2.0 * pi * (*f) * i * dt));

	// binary write -> a.dat
	ofstream xx("a.dat", ios::binary | ios::out); 
	// xx : file pointer, "a.dat" : 파일 이름, ios::out : write
	if (!xx) return 666; // 만약 파일이 열리지 않으면 프로그램을 끝낸다.
	xx.write(header1, 12 * sizeof(char)); // 12byte
	// data1 값 대입
	xx.write((char*) data1, (*n) * sizeof(short)); // 1000byte
	// 최종 1012byte의 data
	xx.close();

	// binary read -> a.dat header data를 읽어온다.
	ifstream xx_read("a.dat", ios::binary | ios::in);
	if (!xx_read) return 666;
	xx_read.read(header1, 12 * sizeof(char));
	xx_read.close();
	
	// 기존의 f 확인
	float* t;
	t = (float*)(header1 + 4);
	cout << " f : " << *t << endl; // 기존 f 출력

	*f= 700.0; // 값 변경

	// data2 생성
	short* data2;
	data2 = new short[*n]; // 1000byte의 data
	for (int i = 0; i < n[0]; i++)
		data2[i] = (short)(a[0] * sin(2.0 * pi * (*f) * i * dt));

	// binary write -> b.dat
	ofstream yy("b.dat", ios::binary | ios::out);
	if (!yy) return 666;
	// data2 값 대입
	yy.write((char*)data2, (*n) * sizeof(short)); // 1000byte file 생성
	yy.close();

	// header2 생성
	char* header2 = new char[12];

	// binary read -> a.dat에서 header2 data 가지고 옴
	ifstream xx_read2("a.dat", ios::binary | ios::out);
	if (!xx_read2) return 666;
	xx_read2.read(header2, 12 * sizeof(char));
	int* x = (int*)(header2); // *x = 500

	// data_A, data_B 생성
	short* data_A = new short[*x];
	short* data_B = new short[*x];

	// data_A에 정보 입력
	xx_read2.read((char*)data_A, (*n) * sizeof(short));
	xx_read2.close();

	// data_B에 정보 입력
	ifstream yy_read2("b.dat", ios::binary | ios::out);
	if (!yy_read2) return 666;
	yy_read2.read((char*)data_B, *n * sizeof(short));
	yy_read2.close();

	ofstream zz("c.txt");
	if (!zz) return 666;
	for (int i = 0; i < *n; i++) {
		zz << i * dt << " " << data_A[i] << " " << data_B[i] << endl;
	}
	zz.close();

	return 0;
}
